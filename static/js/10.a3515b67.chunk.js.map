{"version":3,"file":"static/js/10.a3515b67.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://react-homework-template/./src/components/GoBackBtn/GoBackBtn.module.css?e4ec","components/GoBackBtn/GoBackBtn.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","webpack://react-homework-template/./src/components/MoviesList/MovieItem/MovieItem.module.css?c419","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header_error\":\"Error_header_error__8xhVO\",\"description_error\":\"Error_description_error__n-HWJ\"};","import GoBackBtn from 'components/GoBackBtn/GoBackBtn';\nimport css from './Error.module.css';\n\nconst Error = ({ message }) => {\n  return (\n    <>\n      <GoBackBtn />\n      <h2 className={css.header_error}>\n        Oops something went wrong! Try reloading the page\n      </h2>\n      <p className={css.description_error}>{message}</p>\n    </>\n  );\n};\n\nexport default Error;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_goback_btn\":\"GoBackBtn_movie_goback_btn__ctDMq\"};","import { useNavigate } from 'react-router-dom';\nimport css from './GoBackBtn.module.css';\n\nexport const GoBackBtn = () => {\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(-1);\n\n  return (\n    <button onClick={goBack} className={css.movie_goback_btn}>\n      Go back\n    </button>\n  );\n};\n\nexport default GoBackBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\",\"movie_list\":\"MoviesList_movie_list__m49C0\",\"movie_title\":\"MoviesList_movie_title__HT75l\"};","// extracted by mini-css-extract-plugin\nexport default {\"movie_item\":\"MovieItem_movie_item__xpT3K\",\"movie_img\":\"MovieItem_movie_img__36WAE\",\"movie_link\":\"MovieItem_movie_link__TLLiQ\",\"movie_title\":\"MovieItem_movie_title__rGVkP\"};","import { Link } from 'react-router-dom';\nimport css from './MovieItem.module.css';\n\nconst MovieItem = ({ title, id, img }) => {\n  const BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <li className={css.movie_item}>\n      <Link className={css.movie_link} to={`/movies/${id}`}>\n        <img className={css.movie_img} src={BASE_IMG + img} alt={title} loading=\"lazy\" />\n        <p className={css.movie_title}>{title}</p>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","import css from './MoviesList.module.css';\nimport MovieItem from './MovieItem/MovieItem';\n\nconst MoviesList = ({ movies, page }) => {\n  const isMovies = Boolean(movies.length);\n  const title =\n    page === 'home'\n      ? 'This is popular movie list in the day:'\n      : 'This is movie list according to your search:';\n\n  return (\n    <div className={css.container}>\n      {isMovies && <h1 className={css.movie_title}>{title}</h1>}\n      <ul className={css.movie_list}>\n        {movies.map(({ title, id, poster_path }) => {\n          return <MovieItem key={id} title={title} id={id} img={poster_path} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"input_wrap\":\"Searchbar_input_wrap__LiusX\",\"input\":\"Searchbar_input__19umw\",\"search_svg\":\"Searchbar_search_svg__vWNBJ\",\"form_btn\":\"Searchbar_form_btn__jfKM-\"};","import { Formik, Field, Form } from 'formik';\nimport { Notify } from 'notiflix';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const handleSubmit = ({ query }, action) => {\n    if (!query) {\n      return Notify.failure('You have to write something here for a successful search');\n    }\n\n    onSubmit(query);\n    action.resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSubmit}>\n      <Form className={css.form}>\n        <div className={css.input_wrap}>\n          <Field\n            className={css.input}\n            name=\"query\"\n            type=\"text\"\n            placeholder=\"Search movies...\"\n          />\n          <button className={css.form_btn} type=\"submit\">\n            <BiSearchAlt className={css.search_svg} />\n          </button>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default Searchbar;\n","import { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\n\nimport { getCurrentMovies } from 'services/movies-api';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport { useCustomContext } from 'components/Context/Context';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst Movies = () => {\n  const { currentMovies, setCurrentMovies } = useCustomContext();\n  const [value, setValue] = useState('');\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  useEffect(() => {\n    currentMovies && setStatus(STATUS.RESOLVED);\n  }, [currentMovies]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const movies = await getCurrentMovies(value);\n\n      try {\n        setCurrentMovies(movies);\n        setStatus(STATUS.RESOLVED);\n      } catch {\n        Notify.failure('Oops something went wrong! Try reloading the page');\n        setStatus(STATUS.REJECTED);\n      }\n    };\n\n    if (value) fetchMovies();\n  }, [value, setCurrentMovies]);\n\n  const updateValues = newValue => {\n    if (newValue === value) {\n      Notify.info('You have to write new keyword...Try again!');\n      return;\n    }\n\n    setValue(newValue);\n    setStatus(STATUS.PENDING);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={updateValues} />\n      {status === STATUS.RESOLVED && <MoviesList movies={currentMovies} page=\"movie\" />}\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.REJECTED && <Error message=\"Load failed your movies\" />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","message","_jsxs","_Fragment","children","_jsx","GoBackBtn","className","css","navigate","useNavigate","onClick","title","id","img","Link","to","concat","src","alt","loading","movies","page","isMovies","Boolean","length","map","_ref2","poster_path","MovieItem","onSubmit","Formik","initialValues","query","action","Notify","resetForm","Form","Field","name","type","placeholder","BiSearchAlt","STATUS","_useCustomContext","useCustomContext","currentMovies","setCurrentMovies","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","status","setStatus","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","getCurrentMovies","sent","_unused","stop","apply","arguments","Searchbar","newValue","MoviesList","Loader","Error"],"sourceRoot":""}